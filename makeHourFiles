#!/usr/bin/env python

import sys
from pyrocko import pile, io, util
import time, calendar

# returns all arguments as typed during program call as a list: 
args = sys.argv[:]

# if no argument was given...
if len(args) == 1:
    print '''
    This program splits long time miniseed files into hourfiles.

    USAGE:   python makeHourFiles.py directory1 directory2 ...
    '''

    # stop program execution
    sys.exit(0)

# remove the first item, i.e. the program name 
args.remove(args[0])

p = pile.make_pile(args)  # could give directories or thousands of filenames here

# get timestamp for full hour before first data sample in all selected traces
tmin = calendar.timegm( time.gmtime(p.tmin)[:4] + ( 0, 0 ) )

# iterate over the data, with a window length of one hour
for traces in p.chopper(tmin=tmin, tinc=3600):
    if traces:    # the list could be empty due to gaps
	stat=traces[0].station
        window_start = traces[0].wmin
        timestring = util.time_to_str(window_start, format='%Y-%m-%d_%H')
        filepath = '%s_hourfiles/%s-%s.mseed' % (stat, stat, timestring)
        io.save(traces, filepath)
